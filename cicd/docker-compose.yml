version: "3"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command: --configFile=/traefik.yml
    restart: always
    ports:
      - 80:80
      - 443:443
      - 5432:5432
    networks:
      - web
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
      - ./config.yml:/config.yml
      - /opt/traefik/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.api.rule=Host(`traefik.nearchaintools.com`)
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.middlewares=https-redirect@file
      - traefik.http.routers.api-secured.rule=Host(`traefik.nearchaintools.com`)
      - traefik.http.routers.api-secured.entrypoints=web-secure
      - traefik.http.routers.api-secured.service=api@internal
      - traefik.http.routers.api-secured.middlewares=traefik-auth@file
      - traefik.http.routers.api-secured.tls.certresolver=myhttpchallenge
      - traefik.http.services.api.loadbalancer.server.port=8080

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    expose:
      - 9000
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.portainer.rule=Host(`portainer.nearchaintools.com`)
      - traefik.http.routers.portainer.entrypoints=portainer
      - traefik.http.routers.portainer.middlewares=https-redirect@file
      - traefik.http.routers.portainer-secured.rule=Host(`portainer.nearchaintools.com`)
      - traefik.http.routers.portainer-secured.entrypoints=web-secure
      - traefik.http.routers.portainer-secured.service=portainer
      #- traefik.http.routers.portainer-secured.middlewares=traefik-auth@file
      - traefik.http.routers.portainer-secured.tls.certresolver=myhttpchallenge
      - traefik.http.services.portainer.loadbalancer.server.port=9000

networks:
  web:
    external: true

volumes:
  portainer_data:
